definitions:
  account.Account_Register:
    properties:
      account_role:
        allOf:
        - $ref: '#/definitions/account.EnumAccountRole'
        enum:
        - HR
        - ADMIN
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
  account.EnumAccountRole:
    enum:
    - HR
    - ADMIN
    type: string
    x-enum-varnames:
    - HR
    - ADMIN
  account.RequestLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  common.error_response:
    properties:
      log:
        type: string
      message:
        type: string
      status-code:
        type: integer
    type: object
  common.success_response:
    properties:
      data: {}
      filter: {}
      message:
        type: string
      paging: {}
      status:
        type: integer
    type: object
info:
  contact: {}
  description: |-
    Human Resource Management (HRM)
    Server is a comprehensive software or hardware system designed to manage all aspects of personnel-related activities within an organization.
    It encompasses employee information management, timekeeping, payroll, training and development, performance management, document management, employee interaction, security, compliance.
  title: Human Resources Management System
  version: "1.0"
paths:
  /api/v1/account:
    get:
      consumes:
      - application/json
      description: 'role admin: get all account'
      produces:
      - application/json
      responses:
        "200":
          description: Get all account successful
          schema:
            $ref: '#/definitions/common.success_response'
        "400":
          description: Get all account failure
          schema:
            $ref: '#/definitions/common.error_response'
      summary: get all account
      tags:
      - Account
    post:
      consumes:
      - application/json
      description: create new account with user's info
      parameters:
      - description: Register request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/account.Account_Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created new account successfully
          schema:
            $ref: '#/definitions/common.success_response'
        "400":
          description: Create failure
          schema:
            $ref: '#/definitions/common.error_response'
      security:
      - ApiKeyAuth: []
      summary: register new account
      tags:
      - Account
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Log in to the account with email and password
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/account.RequestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/common.success_response'
        "400":
          description: login failure
          schema:
            $ref: '#/definitions/common.error_response'
      summary: login to account
      tags:
      - Account
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
